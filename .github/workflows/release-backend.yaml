name: üñ•Ô∏è Release backend
on:
  push:
    branches: [ main ]
    paths:
      - 'packages/api/**'
      - 'common/types/**'
  workflow_dispatch:

env:
  appName: chorely

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    environment: hetzner
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: docker build -t ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.run_number }} .
      - run: docker push ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.run_number }}
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            podman container kill ${{ env.appName }} 
            podman container rm ${{ env.appName }}

            podman image prune -af
            podman image pull ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.run_number }}

            mkdir -p ${{ env.appName }}
            cd ${{ env.appName }}

            podman run \
              --name ${{ env.appName }} \
              -p 3000:3000 \
              --restart unless-stopped \
              --env "NODE_ENV=production" \
              --env "DB_DATABASE=${{ secrets.DB_DATABASE }}" \
              --env "DB_HOST=${{ secrets.DB_HOST }}" \
              --env "DB_MAX_CONNECTIONS=${{ secrets.DB_MAX_CONNECTIONS }}" \
              --env "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" \
              --env "DB_PORT=${{ secrets.DB_PORT }}" \
              --env "DB_USER=${{ secrets.DB_USER }}" \
              --env "SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}" \
              -d ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.run_number }}
